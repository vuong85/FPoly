/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import DAO.LoaiSanPhamDAO;
import DAO.NhaCungCapDAO;
import Entity.LoaiSanPham;
import Entity.NhaCungCap;
import Utils.MsgBox;
import Utils.XExcel;
import java.awt.Color;
import java.awt.Font;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;

/**
 *
 * @author Vu Hoang Phuc
 */
public class QuanLyNhaCungCapJPanel extends javax.swing.JPanel {

    /**
     * Creates new form QuanLyNhaCungJPanel
     */
    public QuanLyNhaCungCapJPanel() {
        initComponents();
        this.init();
        this.fillTableNhaCungCap();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        kGradientPanel6 = new keeptoo.KGradientPanel();
        kGradientPanel3 = new keeptoo.KGradientPanel();
        kGradientPanel4 = new keeptoo.KGradientPanel();
        btnPrev = new keeptoo.KButton();
        btnNext = new keeptoo.KButton();
        btnLast = new keeptoo.KButton();
        btnFirst = new keeptoo.KButton();
        kButton2 = new keeptoo.KButton();
        jLabel1 = new javax.swing.JLabel();
        txt_NhaCungCap = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_NCC = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        kGradientPanel2 = new keeptoo.KGradientPanel();
        kGradientPanel5 = new keeptoo.KGradientPanel();
        btnXoa = new keeptoo.KButton();
        btnSua = new keeptoo.KButton();
        btnMoi = new keeptoo.KButton();
        btnThem = new keeptoo.KButton();
        jLabel2 = new javax.swing.JLabel();
        txtMaNhaCungCap = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtTenNhaCungCap = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtSDT = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtDiaChi = new javax.swing.JTextField();

        kGradientPanel3.setBackground(new java.awt.Color(0, 0, 0));
        kGradientPanel3.setOpaque(false);
        kGradientPanel3.setLayout(null);

        kGradientPanel4.setkEndColor(new java.awt.Color(153, 204, 255));
        kGradientPanel4.setkStartColor(new java.awt.Color(153, 204, 255));
        kGradientPanel4.setOpaque(false);
        kGradientPanel4.setLayout(null);

        btnPrev.setText("<<");
        btnPrev.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        btnPrev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrevActionPerformed(evt);
            }
        });
        kGradientPanel4.add(btnPrev);
        btnPrev.setBounds(100, 10, 88, 38);

        btnNext.setText(">>");
        btnNext.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });
        kGradientPanel4.add(btnNext);
        btnNext.setBounds(200, 10, 88, 38);

        btnLast.setText(">|");
        btnLast.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        btnLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLastActionPerformed(evt);
            }
        });
        kGradientPanel4.add(btnLast);
        btnLast.setBounds(300, 10, 83, 38);

        btnFirst.setText("|<");
        btnFirst.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        btnFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirstActionPerformed(evt);
            }
        });
        kGradientPanel4.add(btnFirst);
        btnFirst.setBounds(10, 10, 82, 40);

        kButton2.setText("Export Excel");
        kButton2.setkEndColor(new java.awt.Color(255, 153, 51));
        kButton2.setkStartColor(new java.awt.Color(255, 51, 0));
        kButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kButton2ActionPerformed(evt);
            }
        });
        kGradientPanel4.add(kButton2);
        kButton2.setBounds(390, 10, 83, 38);

        kGradientPanel3.add(kGradientPanel4);
        kGradientPanel4.setBounds(10, 550, 480, 60);

        jLabel1.setFont(new java.awt.Font("Consolas", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("DANH SÁCH NHA CUNG CẤP");
        kGradientPanel3.add(jLabel1);
        jLabel1.setBounds(20, 20, 380, 40);

        txt_NhaCungCap.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        txt_NhaCungCap.setForeground(new java.awt.Color(255, 255, 255));
        txt_NhaCungCap.setText("Tìm kiếm");
        txt_NhaCungCap.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 255, 255)));
        txt_NhaCungCap.setOpaque(false);
        txt_NhaCungCap.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_NhaCungCapFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_NhaCungCapFocusLost(evt);
            }
        });
        txt_NhaCungCap.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_NhaCungCapKeyReleased(evt);
            }
        });
        kGradientPanel3.add(txt_NhaCungCap);
        txt_NhaCungCap.setBounds(20, 60, 420, 30);

        tbl_NCC.setFont(new java.awt.Font("Consolas", 1, 12)); // NOI18N
        tbl_NCC.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "MÃ NCC", "TÊN NHÀ CUNG CẤP", "SDT", "ĐỊA CHỈ"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_NCC.setRowHeight(25);
        tbl_NCC.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_NCCMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_NCC);

        kGradientPanel3.add(jScrollPane1);
        jScrollPane1.setBounds(10, 100, 469, 402);

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/find.png"))); // NOI18N
        kGradientPanel3.add(jLabel5);
        jLabel5.setBounds(450, 60, 30, 30);

        kGradientPanel2.setkGradientFocus(100);
        kGradientPanel2.setOpaque(false);
        kGradientPanel2.setPreferredSize(new java.awt.Dimension(370, 620));
        kGradientPanel2.setLayout(null);

        kGradientPanel5.setkEndColor(new java.awt.Color(153, 204, 255));
        kGradientPanel5.setkStartColor(new java.awt.Color(153, 204, 255));
        kGradientPanel5.setOpaque(false);
        kGradientPanel5.setLayout(null);

        btnXoa.setText("Xóa");
        btnXoa.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });
        kGradientPanel5.add(btnXoa);
        btnXoa.setBounds(110, 10, 70, 37);

        btnSua.setText("Sửa");
        btnSua.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });
        kGradientPanel5.add(btnSua);
        btnSua.setBounds(190, 10, 72, 37);

        btnMoi.setText("Mới");
        btnMoi.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        btnMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoiActionPerformed(evt);
            }
        });
        kGradientPanel5.add(btnMoi);
        btnMoi.setBounds(270, 10, 72, 37);

        btnThem.setText("Thêm");
        btnThem.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });
        kGradientPanel5.add(btnThem);
        btnThem.setBounds(20, 10, 75, 37);

        kGradientPanel2.add(kGradientPanel5);
        kGradientPanel5.setBounds(10, 549, 348, 60);

        jLabel2.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Mã nhà cung cấp:");
        kGradientPanel2.add(jLabel2);
        jLabel2.setBounds(20, 100, 130, 17);

        txtMaNhaCungCap.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        txtMaNhaCungCap.setForeground(new java.awt.Color(255, 255, 255));
        txtMaNhaCungCap.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 255, 255)));
        txtMaNhaCungCap.setOpaque(false);
        kGradientPanel2.add(txtMaNhaCungCap);
        txtMaNhaCungCap.setBounds(160, 90, 190, 30);

        jLabel3.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Tên nhà cung cấp:");
        kGradientPanel2.add(jLabel3);
        jLabel3.setBounds(10, 160, 140, 17);

        txtTenNhaCungCap.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        txtTenNhaCungCap.setForeground(new java.awt.Color(255, 255, 255));
        txtTenNhaCungCap.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 255, 255)));
        txtTenNhaCungCap.setOpaque(false);
        txtTenNhaCungCap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTenNhaCungCapActionPerformed(evt);
            }
        });
        kGradientPanel2.add(txtTenNhaCungCap);
        txtTenNhaCungCap.setBounds(160, 150, 190, 30);

        jLabel4.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Số điện thoại:");
        kGradientPanel2.add(jLabel4);
        jLabel4.setBounds(30, 220, 112, 17);

        txtSDT.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        txtSDT.setForeground(new java.awt.Color(255, 255, 255));
        txtSDT.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 255, 255)));
        txtSDT.setOpaque(false);
        txtSDT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSDTActionPerformed(evt);
            }
        });
        kGradientPanel2.add(txtSDT);
        txtSDT.setBounds(160, 210, 190, 30);

        jLabel6.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Địa chỉ:");
        kGradientPanel2.add(jLabel6);
        jLabel6.setBounds(80, 280, 70, 17);

        txtDiaChi.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        txtDiaChi.setForeground(new java.awt.Color(255, 255, 255));
        txtDiaChi.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 255, 255)));
        txtDiaChi.setOpaque(false);
        txtDiaChi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDiaChiActionPerformed(evt);
            }
        });
        kGradientPanel2.add(txtDiaChi);
        txtDiaChi.setBounds(160, 270, 190, 30);

        javax.swing.GroupLayout kGradientPanel6Layout = new javax.swing.GroupLayout(kGradientPanel6);
        kGradientPanel6.setLayout(kGradientPanel6Layout);
        kGradientPanel6Layout.setHorizontalGroup(
            kGradientPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel6Layout.createSequentialGroup()
                .addComponent(kGradientPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(kGradientPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        kGradientPanel6Layout.setVerticalGroup(
            kGradientPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel6Layout.createSequentialGroup()
                .addGroup(kGradientPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(kGradientPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 620, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(kGradientPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(kGradientPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(kGradientPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnPrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrevActionPerformed
        // TODO add your handling code here:
        this.prev();
    }//GEN-LAST:event_btnPrevActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        // TODO add your handling code here:
        this.next();
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLastActionPerformed
        // TODO add your handling code here:
        this.last();
    }//GEN-LAST:event_btnLastActionPerformed

    private void btnFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstActionPerformed
        // TODO add your handling code here:\
        this.first();
    }//GEN-LAST:event_btnFirstActionPerformed

    private void txt_NhaCungCapKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_NhaCungCapKeyReleased
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tbl_NCC.getModel();
        model.setRowCount(0);
        String keyword = txt_NhaCungCap.getText();
        List<NhaCungCap> list = dao.selectNotInCourse(keyword);
        for (NhaCungCap kh : list) {
            model.addRow(new Object[]{
                kh.getMANCC(),
                kh.getTENNCC(),
                kh.getSDT(),
                kh.getDIACHI(),});
        }
    }//GEN-LAST:event_txt_NhaCungCapKeyReleased

    private void tbl_NCCMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_NCCMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 1) {
            this.row = tbl_NCC.getSelectedRow();
            this.edit();
        }
    }//GEN-LAST:event_tbl_NCCMouseClicked

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        this.insert();
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoiActionPerformed
        // TODO add your handling code here:
        this.clearForm();
    }//GEN-LAST:event_btnMoiActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO add your handling code here:
        this.update();
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        this.delete();
    }//GEN-LAST:event_btnXoaActionPerformed

    private void txtTenNhaCungCapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTenNhaCungCapActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTenNhaCungCapActionPerformed

    private void txtSDTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSDTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSDTActionPerformed

    private void txtDiaChiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDiaChiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDiaChiActionPerformed

    private void txt_NhaCungCapFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_NhaCungCapFocusGained
        // TODO add your handling code here:
        if (txt_NhaCungCap.getText().equals("Tìm kiếm")) {
            txt_NhaCungCap.setText("");
        }
    }//GEN-LAST:event_txt_NhaCungCapFocusGained

    private void txt_NhaCungCapFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_NhaCungCapFocusLost
        // TODO add your handling code here:
        if (txt_NhaCungCap.getText().equals("")) {
            txt_NhaCungCap.setText("Tìm kiếm");
        }
    }//GEN-LAST:event_txt_NhaCungCapFocusLost

    private void kButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kButton2ActionPerformed
        // TODO add your handling code here:
        XExcel a = new XExcel();
        a.exportToExcels(tbl_NCC);
    }//GEN-LAST:event_kButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private keeptoo.KButton btnFirst;
    private keeptoo.KButton btnLast;
    private keeptoo.KButton btnMoi;
    private keeptoo.KButton btnNext;
    private keeptoo.KButton btnPrev;
    private keeptoo.KButton btnSua;
    private keeptoo.KButton btnThem;
    private keeptoo.KButton btnXoa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private keeptoo.KButton kButton2;
    private keeptoo.KGradientPanel kGradientPanel2;
    private keeptoo.KGradientPanel kGradientPanel3;
    private keeptoo.KGradientPanel kGradientPanel4;
    private keeptoo.KGradientPanel kGradientPanel5;
    private keeptoo.KGradientPanel kGradientPanel6;
    private javax.swing.JTable tbl_NCC;
    private javax.swing.JTextField txtDiaChi;
    private javax.swing.JTextField txtMaNhaCungCap;
    private javax.swing.JTextField txtSDT;
    private javax.swing.JTextField txtTenNhaCungCap;
    private javax.swing.JTextField txt_NhaCungCap;
    // End of variables declaration//GEN-END:variables
    int row = -1;
    int row1 = -1;
    NhaCungCapDAO dao = new NhaCungCapDAO();
    LoaiSanPhamDAO dao1 = new LoaiSanPhamDAO();

    void init() {

        this.row = -1;
        this.updateStatus();
        
        txtMaNhaCungCap.setBackground(new java.awt.Color(0, 0, 0, 1));
        txtTenNhaCungCap.setBackground(new java.awt.Color(0, 0, 0, 1));
        txtSDT.setBackground(new java.awt.Color(0, 0, 0, 1));
        txt_NhaCungCap.setBackground(new java.awt.Color(0, 0, 0, 1));
        txtDiaChi.setBackground(new java.awt.Color(0, 0, 0, 1));
        CanChinhTable();
        JTableHeader header = tbl_NCC.getTableHeader();
        header.setBackground(Color.cyan);
        header.setForeground(Color.black);
        header.setFont(new Font("Tahoma", Font.BOLD, 12));
    }

    void fillTableNhaCungCap() {
        DefaultTableModel model = (DefaultTableModel) tbl_NCC.getModel();
        model.setRowCount(0);
        try {
            List<NhaCungCap> list = dao.selectAll();
            for (NhaCungCap ncc : list) {
                Object[] row = {
                    ncc.getMANCC(),
                    ncc.getTENNCC(),
                    ncc.getSDT(),
                    ncc.getDIACHI(),};
                model.addRow(row);
            }
        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu!" + e);
        }
    }

    
        
    
    
    
    void insert() {
        if (!Validates()) {
            return;
        } else {
            NhaCungCap model = getFormNhaCungCap();
            try {
                dao.insert(model);
                this.fillTableNhaCungCap();
                this.clearForm();
                MsgBox.alert(this, "Thêm mới thành công!");
            } catch (Exception e) {
                MsgBox.alert(this, "Thêm mới thất bại!");
            }
        }
    }

    void update() {
        if (!Validates()) {
            return;
        } else {
            NhaCungCap model = getFormNhaCungCap();
            try {
                dao.update(model);
                this.fillTableNhaCungCap();
                MsgBox.alert(this, "Cập nhật thành công!");
            } catch (Exception e) {
                MsgBox.alert(this, "Cập nhật thất bại!" + e);
            }
        }
    }

    void delete() {
        if (MsgBox.confirm(this, "Bạn có muốn xóa hay không?")) {
            String mancc = txtMaNhaCungCap.getText();
            try {
                dao.delete(mancc);
                this.fillTableNhaCungCap();
                this.clearForm();
                MsgBox.alert(this, "Xóa thành công!");
            } catch (Exception e) {
                MsgBox.alert(this, "Xóa thất bại!");
            }
        }
    }

    void clearForm() {
        this.setForm(new NhaCungCap());
        this.row = -1;
        this.row1 = -1;
        this.updateStatus();
    }

    void edit() {
        String mancc = (String) tbl_NCC.getValueAt(this.row, 0);
        NhaCungCap ncc = dao.selectById(mancc);
        this.setForm(ncc);
        this.updateStatus();
    }
    


    void setForm(NhaCungCap ncc) {
        txtMaNhaCungCap.setText(ncc.getMANCC());
        txtTenNhaCungCap.setText(ncc.getTENNCC());
        txtSDT.setText(String.valueOf(ncc.getSDT()));
        txtDiaChi.setText(String.valueOf(ncc.getDIACHI()));
        
    }
    


    NhaCungCap getFormNhaCungCap() {
        NhaCungCap ncc = new NhaCungCap();
        ncc.setMANCC(txtMaNhaCungCap.getText());
        ncc.setTENNCC(txtTenNhaCungCap.getText());
        ncc.setSDT(txtSDT.getText());
        ncc.setDIACHI(txtDiaChi.getText());
        return ncc;
    }


    
    
    void first() {
        if(tbl_NCC.getValueAt(this.row, 0) !=null){
            
        this.row = 0;
        tbl_NCC.setRowSelectionInterval(row, row);
        this.edit();
        }
        
    }

    void prev() {
        if (this.row > 0) {
            this.row--;
            tbl_NCC.setRowSelectionInterval(row, row);
            this.edit();
        }
    }

    void next() {
        if (this.row < tbl_NCC.getRowCount() - 1) {
            this.row++;
            tbl_NCC.setRowSelectionInterval(row, row);
            this.edit();
        }
    }

    void last() {
        this.row = tbl_NCC.getRowCount() - 1;
        tbl_NCC.setRowSelectionInterval(row, row);
        this.edit();
    }

    void updateStatus() {
        boolean edit = (this.row >= 0);
        boolean first = (this.row == 0);
        boolean last = (this.row == tbl_NCC.getRowCount() - 1);

        // Trạng thái điều hướng
        txtMaNhaCungCap.setEnabled(!edit);
        btnThem.setVisible(!edit);
        btnSua.setVisible(edit);
        btnXoa.setVisible(edit);

        // Trạng thái điều hướng
        
        btnFirst.setVisible(edit && !first);
        btnPrev.setVisible(edit && !first);
        btnNext.setVisible(edit && !last);
        btnLast.setVisible(edit && !last);
    }

    boolean Validates() {
        if (txtMaNhaCungCap.getText().equals("")) {
            MsgBox.alert(this, "Mã nhà cung cấp không được rỗng");
            txtMaNhaCungCap.requestFocus();
            return false;
        }
        if (txtTenNhaCungCap.getText().equals("")) {
            MsgBox.alert(this, "Tên nhà cung cấp không được rỗng");
            txtTenNhaCungCap.requestFocus();
            return false;
        }
        if (txtSDT.getText().equals("")) {
            MsgBox.alert(this, "Số điện thoại không được rỗng");
            txtSDT.requestFocus();
            return false;

        }
        //////////////////
        boolean flag;
        do {
            String phonePattern = "(09|03|07|08|05)+([0-9]{8})";
            flag = txtSDT.getText().matches(phonePattern);
            if (!flag) {
                 MsgBox.alert(this, "Số điện thoại không được rỗng");
                txtSDT.requestFocus();
                return false;
            }
        } while (!flag);

        if (txtDiaChi.getText().equals("")) {
            MsgBox.alert(this, "Địa chỉ không được rỗng");
            txtDiaChi.requestFocus();
            return false;
        }
        return true;
    }
    void CanChinhTable() {
        tbl_NCC.setAutoResizeMode(tbl_NCC.AUTO_RESIZE_OFF);
        tbl_NCC.getColumnModel().getColumn(0).setPreferredWidth(60);
        tbl_NCC.getColumnModel().getColumn(1).setPreferredWidth(110);
        tbl_NCC.getColumnModel().getColumn(2).setPreferredWidth(100);
        tbl_NCC.getColumnModel().getColumn(3).setPreferredWidth(200);

        
    }
}
