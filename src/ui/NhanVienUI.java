/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import DAO.ChiTietDonHangDAO;
import DAO.DonHangDAO;
import DAO.KhachHangDAO;
import DAO.LoaiSanPhamDAO;
import DAO.NhaCungCapDAO;
import DAO.SanPhamDAO;
import DAO.ThanhToanDAO;
import Entity.ChiTietDonHang;
import Entity.DonHang;
import Entity.DonHangTam;
import Entity.KhachHang;
import Entity.NhaCungCap;
import Entity.LoaiSanPham;
import Entity.SanPham;
import Entity.ThanhToan;
import Utils.Auth;
import Utils.MsgBox;
import Utils.XChuyenDoiTien;
import Utils.XDate;
import Utils.XImage;
import Utils.XJdbc;
import java.awt.Color;
import java.awt.Font;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.sql.Connection;
import java.sql.DriverManager;
import java.util.ArrayList;
import java.util.Hashtable;
import java.util.List;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.Timer;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumnModel;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JRDesignQuery;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;
import org.jfree.ui.Spinner;

/**
 *
 * @author 84963
 */
public class NhanVienUI extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    ArrayList<DonHangTam> dssp = new ArrayList<DonHangTam>();

    public NhanVienUI() {
        initComponents();
        init();
        txtMoTa.setBackground(new java.awt.Color(0, 0, 0, 1));
        txtTenNhanVien.setBackground(new java.awt.Color(0, 0, 0, 1));
        txtThanhTien.setBackground(new java.awt.Color(0, 0, 0, 1));
        txtTimKhachHang.setBackground(new java.awt.Color(0, 0, 0, 1));
        txtTimKiem.setBackground(new java.awt.Color(0, 0, 0, 1));
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        kGradientPanel1 = new keeptoo.KGradientPanel();
        kGradientPanel2 = new keeptoo.KGradientPanel();
        lblMlem = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        kGradientPanel3 = new keeptoo.KGradientPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSanPham = new javax.swing.JTable();
        txtTimKiem = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        kGradientPanel4 = new keeptoo.KGradientPanel();
        cboLoaiSP = new javax.swing.JComboBox<>();
        kGradientPanel5 = new keeptoo.KGradientPanel();
        cboNCC = new javax.swing.JComboBox<>();
        kGradientPanel6 = new keeptoo.KGradientPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        lblAnh = new javax.swing.JLabel();
        lblMaSp = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtMoTa = new javax.swing.JTextArea();
        lblGia = new javax.swing.JLabel();
        lblTenSp = new javax.swing.JLabel();
        jspSoLuong = new javax.swing.JSpinner();
        kButton1 = new keeptoo.KButton();
        kGradientPanel7 = new keeptoo.KGradientPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtTimKhachHang = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblDonHang = new javax.swing.JTable();
        cboThanhToan = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        lblNgayMua = new javax.swing.JLabel();
        cboTenKhachHang = new javax.swing.JComboBox<>();
        txtTenNhanVien = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtThanhTien = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        kButton2 = new keeptoo.KButton();
        kButton3 = new keeptoo.KButton();
        kButton4 = new keeptoo.KButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("HỆ THỐNG BÁN HÀNG");
        setUndecorated(true);

        kGradientPanel2.setOpaque(false);

        lblMlem.setFont(new java.awt.Font("Times New Roman", 1, 48)); // NOI18N
        lblMlem.setForeground(new java.awt.Color(255, 255, 255));
        lblMlem.setText("VUI VẺ KHÔNG QUẠO");

        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/pngegg.png"))); // NOI18N
        jLabel14.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel14MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout kGradientPanel2Layout = new javax.swing.GroupLayout(kGradientPanel2);
        kGradientPanel2.setLayout(kGradientPanel2Layout);
        kGradientPanel2Layout.setHorizontalGroup(
            kGradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel2Layout.createSequentialGroup()
                .addContainerGap(325, Short.MAX_VALUE)
                .addComponent(lblMlem)
                .addGap(278, 278, 278)
                .addComponent(jLabel14))
        );
        kGradientPanel2Layout.setVerticalGroup(
            kGradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblMlem, javax.swing.GroupLayout.DEFAULT_SIZE, 68, Short.MAX_VALUE)
            .addGroup(kGradientPanel2Layout.createSequentialGroup()
                .addComponent(jLabel14)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        kGradientPanel3.setOpaque(false);
        kGradientPanel3.setPreferredSize(new java.awt.Dimension(634, 593));

        tblSanPham.setBackground(new java.awt.Color(204, 204, 255));
        tblSanPham.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        tblSanPham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Mã sản phẩm", "Tên sản phẩm ", "Giá", "Số lượng", "Mô tả", "Hình"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblSanPham.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSanPhamMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblSanPham);

        txtTimKiem.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        txtTimKiem.setForeground(new java.awt.Color(255, 255, 255));
        txtTimKiem.setText("Tìm kiếm");
        txtTimKiem.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 255, 255)));
        txtTimKiem.setOpaque(false);
        txtTimKiem.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtTimKiemFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtTimKiemFocusLost(evt);
            }
        });
        txtTimKiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimKiemKeyReleased(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 5)); // NOI18N
        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/find.png"))); // NOI18N

        kGradientPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Loại sản phẩm", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Consolas", 1, 14), new java.awt.Color(255, 255, 255))); // NOI18N
        kGradientPanel4.setFont(new java.awt.Font("Consolas", 1, 12)); // NOI18N
        kGradientPanel4.setOpaque(false);

        cboLoaiSP.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        cboLoaiSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboLoaiSPActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout kGradientPanel4Layout = new javax.swing.GroupLayout(kGradientPanel4);
        kGradientPanel4.setLayout(kGradientPanel4Layout);
        kGradientPanel4Layout.setHorizontalGroup(
            kGradientPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cboLoaiSP, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        kGradientPanel4Layout.setVerticalGroup(
            kGradientPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cboLoaiSP, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        kGradientPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Nhà cung cấp", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Consolas", 1, 14), new java.awt.Color(255, 255, 255))); // NOI18N
        kGradientPanel5.setFont(new java.awt.Font("Consolas", 1, 12)); // NOI18N
        kGradientPanel5.setOpaque(false);

        cboNCC.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        cboNCC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboNCCActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout kGradientPanel5Layout = new javax.swing.GroupLayout(kGradientPanel5);
        kGradientPanel5.setLayout(kGradientPanel5Layout);
        kGradientPanel5Layout.setHorizontalGroup(
            kGradientPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cboNCC, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        kGradientPanel5Layout.setVerticalGroup(
            kGradientPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cboNCC, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        kGradientPanel6.setOpaque(false);
        kGradientPanel6.setPreferredSize(new java.awt.Dimension(614, 248));

        jLabel5.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Mã sản phẩm:");

        jLabel8.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Tên sản phẩm:");

        jLabel9.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Giá:");

        jLabel10.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Mô tả:");

        jLabel11.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Số lượng:");

        lblMaSp.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        lblMaSp.setForeground(new java.awt.Color(255, 255, 255));

        txtMoTa.setEditable(false);
        txtMoTa.setColumns(20);
        txtMoTa.setRows(5);
        txtMoTa.setEnabled(false);
        jScrollPane3.setViewportView(txtMoTa);

        lblGia.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        lblGia.setForeground(new java.awt.Color(255, 255, 255));

        lblTenSp.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        lblTenSp.setForeground(new java.awt.Color(255, 255, 255));

        jspSoLuong.setFont(new java.awt.Font("Consolas", 1, 11)); // NOI18N
        jspSoLuong.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));
        jspSoLuong.setToolTipText("");
        jspSoLuong.setOpaque(false);
        jspSoLuong.setValue(1);

        kButton1.setText("Chọn mua");
        kButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout kGradientPanel6Layout = new javax.swing.GroupLayout(kGradientPanel6);
        kGradientPanel6.setLayout(kGradientPanel6Layout);
        kGradientPanel6Layout.setHorizontalGroup(
            kGradientPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblAnh, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(kGradientPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel6Layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addGroup(kGradientPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(kButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(kGradientPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addGap(18, 18, 18)
                                .addComponent(jspSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane3))
                        .addContainerGap())
                    .addGroup(kGradientPanel6Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(kGradientPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel10)
                            .addComponent(jLabel5))
                        .addGroup(kGradientPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(kGradientPanel6Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblMaSp, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblGia, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(kGradientPanel6Layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(lblTenSp, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(32, Short.MAX_VALUE))))))
        );
        kGradientPanel6Layout.setVerticalGroup(
            kGradientPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(kGradientPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(kGradientPanel6Layout.createSequentialGroup()
                        .addGroup(kGradientPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblTenSp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(kGradientPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel6Layout.createSequentialGroup()
                                .addGroup(kGradientPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblMaSp, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel6Layout.createSequentialGroup()
                                .addComponent(lblGia, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)))
                        .addGroup(kGradientPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(jLabel10)
                            .addComponent(jspSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(kButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblAnh, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout kGradientPanel3Layout = new javax.swing.GroupLayout(kGradientPanel3);
        kGradientPanel3.setLayout(kGradientPanel3Layout);
        kGradientPanel3Layout.setHorizontalGroup(
            kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(kGradientPanel3Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(txtTimKiem)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel3Layout.createSequentialGroup()
                        .addComponent(kGradientPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(kGradientPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(kGradientPanel3Layout.createSequentialGroup()
                        .addComponent(kGradientPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        kGradientPanel3Layout.setVerticalGroup(
            kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(kGradientPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(kGradientPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(kGradientPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, 256, Short.MAX_VALUE))
        );

        kGradientPanel7.setOpaque(false);
        kGradientPanel7.setPreferredSize(new java.awt.Dimension(487, 507));

        jLabel1.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Tên nhân viên: ");

        jLabel2.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Tìm khách hàng:");

        jLabel3.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Ngày mua:");

        jLabel4.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Tên khách hàng:");

        txtTimKhachHang.setFont(new java.awt.Font("Consolas", 1, 12)); // NOI18N
        txtTimKhachHang.setForeground(new java.awt.Color(255, 255, 255));
        txtTimKhachHang.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 255, 255)));
        txtTimKhachHang.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimKhachHangKeyReleased(evt);
            }
        });

        tblDonHang.setBackground(new java.awt.Color(204, 204, 255));
        tblDonHang.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        tblDonHang.setForeground(new java.awt.Color(255, 0, 0));
        tblDonHang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã Sản Phẩm", "Tên Sản Phẩm", "Số Lượng", "Giá", "Thành Tiền"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDonHang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDonHangMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblDonHang);

        cboThanhToan.setFont(new java.awt.Font("Consolas", 1, 12)); // NOI18N
        cboThanhToan.setBorder(null);
        cboThanhToan.setOpaque(false);

        jLabel6.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Thanh toán:");

        lblNgayMua.setFont(new java.awt.Font("Consolas", 1, 12)); // NOI18N
        lblNgayMua.setForeground(new java.awt.Color(255, 255, 255));

        cboTenKhachHang.setFont(new java.awt.Font("Consolas", 1, 12)); // NOI18N
        cboTenKhachHang.setBorder(null);
        cboTenKhachHang.setOpaque(false);

        txtTenNhanVien.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        txtTenNhanVien.setForeground(new java.awt.Color(0, 255, 51));

        jLabel7.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Tổng tiền:");

        txtThanhTien.setEditable(false);
        txtThanhTien.setFont(new java.awt.Font("Consolas", 0, 12)); // NOI18N
        txtThanhTien.setForeground(new java.awt.Color(255, 255, 255));
        txtThanhTien.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 255, 255)));

        jLabel12.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("VND");

        kButton2.setText("Xóa");
        kButton2.setkEndColor(new java.awt.Color(204, 0, 51));
        kButton2.setkHoverEndColor(new java.awt.Color(204, 0, 0));
        kButton2.setkStartColor(new java.awt.Color(204, 0, 0));
        kButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kButton2ActionPerformed(evt);
            }
        });

        kButton3.setText("Thanh Toán");
        kButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kButton3ActionPerformed(evt);
            }
        });

        kButton4.setText("+");
        kButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout kGradientPanel7Layout = new javax.swing.GroupLayout(kGradientPanel7);
        kGradientPanel7.setLayout(kGradientPanel7Layout);
        kGradientPanel7Layout.setHorizontalGroup(
            kGradientPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel7Layout.createSequentialGroup()
                .addGroup(kGradientPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(kGradientPanel7Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 467, Short.MAX_VALUE))
                    .addGroup(kGradientPanel7Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(kGradientPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4)
                            .addComponent(jLabel6))
                        .addGap(24, 24, 24)
                        .addGroup(kGradientPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(kGradientPanel7Layout.createSequentialGroup()
                                .addComponent(txtTenNhanVien, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(64, 64, 64))
                            .addGroup(kGradientPanel7Layout.createSequentialGroup()
                                .addGroup(kGradientPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(kGradientPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(cboThanhToan, 0, 282, Short.MAX_VALUE)
                                        .addComponent(lblNgayMua, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(cboTenKhachHang, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(kGradientPanel7Layout.createSequentialGroup()
                                        .addComponent(txtTimKhachHang, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(kButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
            .addGroup(kGradientPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtThanhTien, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel7Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(kButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(kButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(93, 93, 93))
        );
        kGradientPanel7Layout.setVerticalGroup(
            kGradientPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel7Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(kGradientPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(txtTenNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(kGradientPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel7Layout.createSequentialGroup()
                        .addGroup(kGradientPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(lblNgayMua, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)
                        .addGroup(kGradientPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtTimKhachHang, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(kButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(kGradientPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(cboTenKhachHang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(kGradientPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cboThanhToan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtThanhTien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7)
                        .addComponent(jLabel12)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 102, Short.MAX_VALUE)
                .addGroup(kGradientPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(kButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(kButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21))
        );

        javax.swing.GroupLayout kGradientPanel1Layout = new javax.swing.GroupLayout(kGradientPanel1);
        kGradientPanel1.setLayout(kGradientPanel1Layout);
        kGradientPanel1Layout.setHorizontalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(kGradientPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                        .addComponent(kGradientPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(kGradientPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        kGradientPanel1Layout.setVerticalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(kGradientPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(kGradientPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 604, Short.MAX_VALUE)
                    .addComponent(kGradientPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, 604, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(kGradientPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(kGradientPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel14MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel14MouseClicked
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jLabel14MouseClicked

    private void tblSanPhamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSanPhamMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2) {
            this.row = tblSanPham.getSelectedRow();
            this.edit();
            this.fillHinhAnh();
            this.setValueJspinner();
        }
    }//GEN-LAST:event_tblSanPhamMouseClicked

    private void txtTimKiemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKiemKeyReleased
        // TODO add your handling code here:
        this.timKiemSP();
    }//GEN-LAST:event_txtTimKiemKeyReleased

    private void cboNCCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboNCCActionPerformed
        // TODO add your handling code here:
        this.fillComboBoxLOAI();
        this.fillTableSanPham();
    }//GEN-LAST:event_cboNCCActionPerformed

    private void cboLoaiSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboLoaiSPActionPerformed
        // TODO add your handling code here:
        this.fillTableSanPham();
    }//GEN-LAST:event_cboLoaiSPActionPerformed

    private void kButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kButton1ActionPerformed
        // TODO add your handling code here:
        String masp = lblMaSp.getText();
        if (masp.equals("")) {
            MsgBox.alert(this, "Vui lòng chọn sản phẩm!");
            return;
        }
        this.addDonHang();
        this.fillTableDonHang();
        txtThanhTien.setText(XChuyenDoiTien.DinhDangTien(tinhTong()));
        this.Reset();
    }//GEN-LAST:event_kButton1ActionPerformed

    private void txtTimKhachHangKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKhachHangKeyReleased
        // TODO add your handling code here:
        this.fillComboBoxTenKH();
    }//GEN-LAST:event_txtTimKhachHangKeyReleased

    private void tblDonHangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDonHangMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tblDonHangMouseClicked

    private void kButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kButton2ActionPerformed
        // TODO add your handling code here:
        this.xoaSanPham();
        txtThanhTien.setText(XChuyenDoiTien.DinhDangTien(tinhTong()));
    }//GEN-LAST:event_kButton2ActionPerformed

    private void kButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kButton3ActionPerformed
        // TODO add your handling code here:
        if (tblDonHang.getRowCount() <= 0) {
            MsgBox.alert(this, "Chưa có sản phẩm");
            return;
        } else {
            this.insertDonHang();
            this.insertChiTietDonHang();
            this.updateSL();
            this.ClearTableThanhToan();
            this.XuatHoaDon1();
        }
    }//GEN-LAST:event_kButton3ActionPerformed

    private void kButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kButton4ActionPerformed
        // TODO add your handling code here:
        new QuanLyKhachHangJDiaLog(null, true).setVisible(true);
    }//GEN-LAST:event_kButton4ActionPerformed

    private void txtTimKiemFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTimKiemFocusGained
        // TODO add your handling code here:
        if(txtTimKiem.getText().equals("Tìm kiếm"))
        {
            txtTimKiem.setText("");
        }
    }//GEN-LAST:event_txtTimKiemFocusGained

    private void txtTimKiemFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTimKiemFocusLost
        // TODO add your handling code here:
          if(txtTimKiem.getText().equals(""))
        {
            txtTimKiem.setText("Tìm kiếm");
        }
    }//GEN-LAST:event_txtTimKiemFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NhanVienUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NhanVienUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NhanVienUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NhanVienUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NhanVienUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cboLoaiSP;
    private javax.swing.JComboBox<String> cboNCC;
    private javax.swing.JComboBox<String> cboTenKhachHang;
    private javax.swing.JComboBox<String> cboThanhToan;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSpinner jspSoLuong;
    private keeptoo.KButton kButton1;
    private keeptoo.KButton kButton2;
    private keeptoo.KButton kButton3;
    private keeptoo.KButton kButton4;
    private keeptoo.KGradientPanel kGradientPanel1;
    private keeptoo.KGradientPanel kGradientPanel2;
    private keeptoo.KGradientPanel kGradientPanel3;
    private keeptoo.KGradientPanel kGradientPanel4;
    private keeptoo.KGradientPanel kGradientPanel5;
    private keeptoo.KGradientPanel kGradientPanel6;
    private keeptoo.KGradientPanel kGradientPanel7;
    private javax.swing.JLabel lblAnh;
    private javax.swing.JLabel lblGia;
    private javax.swing.JLabel lblMaSp;
    private javax.swing.JLabel lblMlem;
    private javax.swing.JLabel lblNgayMua;
    private javax.swing.JLabel lblTenSp;
    private javax.swing.JTable tblDonHang;
    private javax.swing.JTable tblSanPham;
    private javax.swing.JTextArea txtMoTa;
    private javax.swing.JLabel txtTenNhanVien;
    private javax.swing.JTextField txtThanhTien;
    private javax.swing.JTextField txtTimKhachHang;
    private javax.swing.JTextField txtTimKiem;
    // End of variables declaration//GEN-END:variables

    String strHinh = null;
    int row = -1;

    NhaCungCapDAO nccdao = new NhaCungCapDAO();
    LoaiSanPhamDAO lspdao = new LoaiSanPhamDAO();
    SanPhamDAO spdao = new SanPhamDAO();
    KhachHangDAO khdao = new KhachHangDAO();

    ChiTietDonHangDAO ctdhdao = new ChiTietDonHangDAO();
    KhachHang kh = new KhachHang();

    ThanhToanDAO ttdao = new ThanhToanDAO();
    DonHang dh = new DonHang();
    DonHangDAO dhdao = new DonHangDAO();

    void init() {
        this.setLocationRelativeTo(null);
        this.fillComboBoxNCC();
        this.fillComboBoxTenKH();
        this.fillComboBoxThanhToan();
        this.blinking();
        this.setResizable(false);
        setIconImage(XImage.getAppIcon());
        //this.autoMaHD();

        String ten = Auth.user.getTENNV();// lấy tên nv bán hàng
        txtTenNhanVien.setText(ten);
        lblNgayMua.setText(XDate.toString(dh.getNGAYMUA(), "dd/MM/yyyy"));// lấy ngày tháng hiện tại
    
        JTableHeader header1 = tblDonHang.getTableHeader();

        header1.setForeground(Color.black);
        header1.setFont(new Font("Tahoma", Font.BOLD, 12));
        
        JTableHeader header2 = tblSanPham.getTableHeader();
        header2.setForeground(Color.black);
        header2.setFont(new Font("Tahoma", Font.BOLD, 12));
        
    }

    void fillComboBoxNCC() {// đổ dữ liệu lên cbo nhà cung cấp
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboNCC.getModel();
        model.removeAllElements();
        List<NhaCungCap> list = nccdao.selectAll();
        for (NhaCungCap ncc : list) {
            model.addElement(ncc);
        }
        this.fillComboBoxLOAI();
    }

    void fillComboBoxLOAI() {// đổ dữ liệu lên cbo loại sản phẩm
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboLoaiSP.getModel();
        model.removeAllElements();
        NhaCungCap nhaCungCap = (NhaCungCap) cboNCC.getSelectedItem();
        List<LoaiSanPham> list = lspdao.selectByNCC(nhaCungCap.getMANCC());//chỉ hiện những loại sp mà nhà cung cấp đó có SP
        for (LoaiSanPham lsp : list) {
            model.addElement(lsp);
        }
        this.fillTableSanPham();
    }

    void fillTableSanPham() {// đổ dữ liệu lên bảng sản phẩm
        DefaultTableModel model = (DefaultTableModel) tblSanPham.getModel();
        model.setRowCount(0);
        NhaCungCap nhaCungCap = (NhaCungCap) cboNCC.getSelectedItem();
        LoaiSanPham loaiSanPham = (LoaiSanPham) cboLoaiSP.getSelectedItem();
        if (loaiSanPham != null) {
            List<SanPham> list = spdao.selectByNCC_LOAISP(nhaCungCap.getMANCC(), loaiSanPham.getMALOAI());// lấy những sản phẩm theo nhà cung cấp và loại đc chọn trên combobox
            for (int i = 0; i < list.size(); i++) {
                SanPham sp = list.get(i);
                model.addRow(new Object[]{
                    sp.getMASP(),
                    sp.getTENSP(),
                    XChuyenDoiTien.DinhDangTien(sp.getGIA()),// định dạng tiền (VD 1,000,000)
                    sp.getSOLUONG(),
                    sp.getMOTA(),
                    sp.getHINH(),});
            }
        }

    }

    void addDonHang() {//thêm sản phẩm đc chọn vô arraylist
        int masp = Integer.parseInt(lblMaSp.getText());
        String tensp = lblTenSp.getText();
        int soluong = Integer.parseInt(jspSoLuong.getValue() + "");
        double gia = Double.parseDouble(XChuyenDoiTien.ChuyenTien(lblGia.getText()) + "");
        double tong = (soluong * gia);
        DonHangTam spt = new DonHangTam(masp, tensp, soluong, gia, tong);
        dssp.add(spt);
    }

    void fillTableDonHang() {//Đổ những sản phẩm đc chọn mua lên bảng đơn hàng với dữ liệu từ arrlist
        DefaultTableModel model = (DefaultTableModel) tblDonHang.getModel();
        model.setRowCount(0);
        for (int i = 0; i < dssp.size(); i++) {
            DonHangTam sptam = dssp.get(i);
            Vector v = new Vector();
            v.add(sptam.getMasp());
            v.add(sptam.getTensp());
            v.add(sptam.getSoluong());
            v.add(XChuyenDoiTien.DinhDangTien(sptam.getGia()));
            v.add(XChuyenDoiTien.DinhDangTien(sptam.getTongGia()));
            model.addRow(v);
        }
    }

    void xoaSanPham() {// xóa sản phẩm đc chọn  trên bảng đơn hàng
        row = tblDonHang.getSelectedRow();
        if (row == -1) {
            MsgBox.alert(this, "Chưa có sản phẩm");
        } else {
            dssp.remove(row);
            row = -1;
            this.fillTableDonHang();
            MsgBox.alert(this, "Xóa thành công");
        }
    }

    void fillComboBoxTenKH() {// đổ dữ liệu của khách hàng lên cbo theo tên
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboTenKhachHang.getModel();
        model.removeAllElements();
        try {
            String keyword = txtTimKhachHang.getText();
            List<KhachHang> list = khdao.selectByNameKH(keyword);// ĐỔ dữ liệu theo tên đc nhập 
            for (KhachHang lkh : list) {
                Object[] row = {
                    kh.getMAKH(),
                    kh.getTENKH(),
                    kh.getDIACHI(),
                    kh.getSDT(),
                    kh.getNGAYSINH(),
                    kh.getEMAIL(),
                    kh.getGIOITINH(),};
                model.addElement(lkh);
            }
        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu!");
        }
    }

    private void timKiem() {// tìm kiếm khách hàng
        this.fillTableSanPham();
    }

    void fillComboBoxThanhToan() {// đổ dữ liệu lên cbo thanh toán
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboThanhToan.getModel();
        model.removeAllElements();
        ThanhToan thanhToan = (ThanhToan) cboThanhToan.getSelectedItem();
        List<ThanhToan> list = ttdao.selectAll();
        for (ThanhToan ltt : list) {
            model.addElement(ltt);
        }
    }

    void Reset() {// xóa trắng form sau khi ấn chọn mua
        lblTenSp.setText("");
        lblMaSp.setText("");
        lblGia.setText("");
        txtMoTa.setText("");
        jspSoLuong.setValue(1);
        lblAnh.setIcon(null);

    }

    void blinking() {//CHữ nhấp nháy Mlem Mlem
        //lblMlem.setOpaque(true);
        Timer time = new Timer(500, new ActionListener() {
            boolean on = false;

            @Override
            public void actionPerformed(ActionEvent e) {
                lblMlem.setForeground(on ? Color.orange : Color.white);

                on = !on;
            }
        });
        time.start();
    }

    void edit() {// khi ấn vào sp nào đó sẽ hiện thông tin sp lên form
        int masp = (Integer) tblSanPham.getValueAt(this.row, 0);// lấy mã sp
        SanPham sp = spdao.selectById(masp);// tìm sp theo mã
        this.setForm(sp);// đổ dữ liệu của sp đó lên form
    }

    void setForm(SanPham sp) {// Lấy sp 
        lblMaSp.setText(String.valueOf(sp.getMASP()));
        txtMoTa.setText(sp.getTENSP());
        lblTenSp.setText(sp.getTENSP());
        lblGia.setText(String.valueOf(XChuyenDoiTien.DinhDangTien(sp.getGIA())));
        //txtSoLuong.setText(String.valueOf(sp.getSOLUONG()));
        txtMoTa.setText(sp.getMOTA());
        //lblAnh.setText(sp.getHINH());
    }

    void fillHinhAnh() {// lấy hình ảnh trong bảng sp và fill đổ lên lblANh
        hinhanh(tblSanPham.getValueAt(row, 5).toString());
    }

    void hinhanh(String hinh) {// lấy hình ảnh
        ImageIcon img = new ImageIcon("src\\IMAGES_SP\\" + hinh);// đường dẫn đến hình
        Image im = img.getImage();// lấy hình
        ImageIcon icon = new ImageIcon(im.getScaledInstance(lblAnh.getWidth(), lblAnh.getHeight(), im.SCALE_SMOOTH));
        // getScaledInstance làm cho hình ảnh nhỏ lại, đúng theo chiều rộng và chiều cao đã được qui định
        // SCALE SMOOTH Chọn thuật toán chia tỷ lệ hình ảnh ưu tiên độ mịn hình ảnh cao hơn tốc độ chia tỷ lệ
        lblAnh.setIcon(icon);
    }

    private double tinhTong() {// Tính tổng số tiền phải trả
        double sum = 0;
        for (int i = 0; i < dssp.size(); i++) {
            sum += dssp.get(i).getTongGia();
        }
        return sum;
    }

    void updateSL() {// Cập nhật số lượng sản phẩm sau khi bấm thanh toán
        for (int i = 0; i < dssp.size(); i++) {

            int massp = dssp.get(i).getMasp();
            SanPham sptam = spdao.selectById(massp);
            int soluongTam = sptam.getSOLUONG();
            int soluongMoi = (soluongTam - dssp.get(i).getSoluong());
            sptam.setSOLUONG(soluongMoi);
            spdao.updateSoLuong(sptam);
            this.fillTableSanPham();
        }
    }

    void ClearTableThanhToan() {//Xóa trắng bảng chọn sp sau khi bấm thanh toán
        dssp.clear();
        txtThanhTien.setText("");
        txtTimKhachHang.setText("");
        fillTableDonHang();
    }

    void insertDonHang() {// Thêm đơn hàng mới sau khi bấm thanh toán
        try {
            ThanhToan tt = (ThanhToan) cboThanhToan.getSelectedItem();
            KhachHang khcbo = (KhachHang) cboTenKhachHang.getSelectedItem();
            DonHang dh = new DonHang();
            // mã đơn hàng tự động tăng
            dh.setNGAYMUA(XDate.toDate(lblNgayMua.getText(), "dd/MM/yyyy"));
            dh.setMAKH(khcbo.getMAKH());// lấy mã khách hàng
            dh.setMATT(String.valueOf(tt.isMATT()));// lấy mã thanh toán 
            dh.setMANV(Auth.user.getMANV());// lấy tên nv đang đăng nhập
            dh.setTongTien(tinhTong());
            dhdao.insert(dh);// thêm đơn hàng      
        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi truy vấn!");
        }
    }

    private void insertChiTietDonHang() {// Thêm mới chi tiết đơn hàng
        for (int i = 0; i < dssp.size(); i++) {
            ChiTietDonHang ctdh = new ChiTietDonHang();
            int madh = Integer.parseInt(dhdao.selectMaxMADH().get(0).toString());// lấy mã đơn hàng dựa vào mã đơn hàng lớn nhất hiện có trong csdl
            ctdh.setMADH(madh);
            ctdh.setMASP(dssp.get(i).getMasp());
            ctdh.setSOLUONG(dssp.get(i).getSoluong());
            ctdh.setGIA(dssp.get(i).getTongGia());
            ctdhdao.insert(ctdh);//thêm chi tiết đơn hàng
        }
    }

    public void XuatHoaDon1() {// xuất hóa đơn sau khi thanh toán
        String dburl = "jdbc:sqlserver://localhost:1433;database=duan1";
        String username = "sa";
        String password = "123";
        try {
            Connection conn = DriverManager.getConnection(dburl, username, password);//Kết nối CSDL bằng đối tượng Connection
            String sql = ""
                    + "SELECT TOP 1 WITH TIES\n"
                    + "	   DONHANG.MADH AS MAHD,\n"
                    + "	   cast(DONHANG.NGAYMUA as char) AS NGAYMUA,\n"
                    + "	   NHANVIEN.TENNV AS TENNV,\n"
                    + "    THANHTOAN.TENTT AS THANHTOAN,\n"
                    + "    KHACHHANG.TENKH AS TENKH,\n"
                    + "	   KHACHHANG.SDT AS SDT,\n"
                    + "	   KHACHHANG.DIACHI AS DIACHI,\n"
                    + "	   SANPHAM.MASP AS MASP,\n"
                    + "	   SANPHAM.TENSP AS TENSP,\n"
                    + "	   SANPHAM.GIA AS GIA,\n"
                    + "	   CHITIETDONHANG.SOLUONG AS SOLUONG,\n"
                    + "	   cast(CHITIETDONHANG.GIA as numeric) AS THANHTIEN,\n"
                    + "	   DONHANG.TONGTIEN AS TONGTIEN\n"
                    + "FROM DONHANG INNER JOIN CHITIETDONHANG ON DONHANG.MADH= CHITIETDONHANG.MADH\n"
                    + "			 INNER JOIN KHACHHANG ON DONHANG.MAKH=KHACHHANG.MAKH\n"
                    + "			 INNER JOIN THANHTOAN ON DONHANG.MATT=THANHTOAN.MATT\n"
                    + "			 INNER JOIN SANPHAM ON CHITIETDONHANG.MASP=SANPHAM.MASP\n"
                    + "			 INNER JOIN NHANVIEN ON DONHANG.MANV=NHANVIEN.MANV\n"
                    + "ORDER BY MAHD DESC";

            JasperDesign jdesDesign = JRXmlLoader.load("src/ui/rptXuatHoaDon.jrxml");
            JRDesignQuery updatDesignQuery = new JRDesignQuery();
            updatDesignQuery.setText(sql);
            jdesDesign.setQuery(updatDesignQuery);
            JasperReport jreReport = JasperCompileManager.compileReport(jdesDesign);
            JasperPrint jasperPrint = JasperFillManager.fillReport(jreReport, null, conn);
            JasperViewer.viewReport(jasperPrint, false);
            JasperExportManager.exportReportToPdfFile(jasperPrint, "test.pdf");

        } catch (Exception e) {
            MsgBox.alert(null, "Lỗi");
        }
    }

    private void timKiemSP() {// tìm kiếm sản phẩm trong bảng sp
        DefaultTableModel model = (DefaultTableModel) tblSanPham.getModel();
        model.setRowCount(0);
        String keyword = txtTimKiem.getText();
        NhaCungCap nhaCungCap = (NhaCungCap) cboNCC.getSelectedItem();
        LoaiSanPham loaiSanPham = (LoaiSanPham) cboLoaiSP.getSelectedItem();
        List<SanPham> list = spdao.selectbyName(keyword, nhaCungCap.getMANCC(), loaiSanPham.getMALOAI());// tìm sản phẩm theo từ khóa nhập vào và ncc & loai đang đc chọn
        for (SanPham sp : list) {
            model.addRow(new Object[]{
                sp.getMASP(),
                sp.getTENSP(),
                XChuyenDoiTien.DinhDangTien(sp.getGIA()),// định dạng tiền để dễ nhìn
                sp.getSOLUONG(),
                sp.getMOTA(),
                sp.getHINH(),});
        }
    }

    private void setValueJspinner() {// validate số lượng mua phải bé hơn số lượng đang có
        int row = tblSanPham.getSelectedRow();
        int soluong = Integer.parseInt(tblSanPham.getValueAt(row, 3).toString());
        try {
            jspSoLuong.setModel(new javax.swing.SpinnerNumberModel(1, 1, soluong, 1));
            //sét giá trị (mặc định =1;  min =1; max = số lượng trong bảng; bước nhảy 1)
        } catch (Exception e) {
            MsgBox.alert(this, "Sản phẩm này đã hết!");
            this.Reset();
        }
    }

}
