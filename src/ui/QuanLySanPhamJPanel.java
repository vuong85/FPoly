/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import DAO.LoaiSanPhamDAO;
import DAO.NhaCungCapDAO;
import DAO.SanPhamDAO;
import Entity.LoaiSanPham;
import Entity.NhaCungCap;
import Entity.SanPham;
import java.io.File;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import Utils.MsgBox;
import Utils.XImage;
import Utils.Auth;
import Utils.XChuyenDoiTien;
import Utils.XExcel;
import java.awt.Color;
import java.awt.Font;
import java.awt.Image;
import javax.swing.JOptionPane;
import javax.swing.table.JTableHeader;

/**
 *
 * @author Vu Hoang Phuc
 */
public class QuanLySanPhamJPanel extends javax.swing.JPanel {

    /**
     * Creates new form QuanLySanPhamJPanel
     */
    public QuanLySanPhamJPanel() {
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        kGradientPanel1 = new keeptoo.KGradientPanel();
        kGradientPanel3 = new keeptoo.KGradientPanel();
        jLabel2 = new javax.swing.JLabel();
        txtTimKiem = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSanPham = new javax.swing.JTable();
        kGradientPanel4 = new keeptoo.KGradientPanel();
        btnPrev = new keeptoo.KButton();
        btnNext = new keeptoo.KButton();
        btnLast = new keeptoo.KButton();
        btnFirst = new keeptoo.KButton();
        kButton2 = new keeptoo.KButton();
        jPanel5 = new javax.swing.JPanel();
        cboLoaiSP = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        cboNCC = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        kGradientPanel2 = new keeptoo.KGradientPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lbHinh = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtMaXanPham = new javax.swing.JLabel();
        txtTenSP = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtSoLuong = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtGia = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        kButton1 = new keeptoo.KButton();
        kGradientPanel5 = new keeptoo.KGradientPanel();
        btnXoa = new keeptoo.KButton();
        btnSua = new keeptoo.KButton();
        btnMoi = new keeptoo.KButton();
        btnThem = new keeptoo.KButton();
        cboNCC1 = new javax.swing.JComboBox<>();
        cboLoaiSP1 = new javax.swing.JComboBox<>();

        kGradientPanel1.setBackground(new java.awt.Color(0, 0, 0));
        kGradientPanel1.setOpaque(false);
        kGradientPanel1.setLayout(null);

        kGradientPanel3.setOpaque(false);
        kGradientPanel3.setLayout(null);

        jLabel2.setFont(new java.awt.Font("Consolas", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("DANH SÁCH SẢN PHẨM");
        kGradientPanel3.add(jLabel2);
        jLabel2.setBounds(20, 20, 310, 40);

        txtTimKiem.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        txtTimKiem.setForeground(new java.awt.Color(255, 255, 255));
        txtTimKiem.setText("Tìm kiếm");
        txtTimKiem.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 255, 255)));
        txtTimKiem.setOpaque(false);
        txtTimKiem.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtTimKiemFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtTimKiemFocusLost(evt);
            }
        });
        txtTimKiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimKiemKeyReleased(evt);
            }
        });
        kGradientPanel3.add(txtTimKiem);
        txtTimKiem.setBounds(30, 60, 410, 20);

        tblSanPham.setBackground(new java.awt.Color(204, 204, 255));
        tblSanPham.setFont(new java.awt.Font("Consolas", 1, 12)); // NOI18N
        tblSanPham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "MÃ SP", "TÊN SP", "SL", "GIÁ", "NCC", "LOẠI", "HÌNH"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblSanPham.setRowHeight(25);
        tblSanPham.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSanPhamMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblSanPham);

        kGradientPanel3.add(jScrollPane1);
        jScrollPane1.setBounds(20, 160, 469, 340);

        kGradientPanel4.setkEndColor(new java.awt.Color(153, 204, 255));
        kGradientPanel4.setkStartColor(new java.awt.Color(153, 204, 255));
        kGradientPanel4.setOpaque(false);
        kGradientPanel4.setLayout(null);

        btnPrev.setText("<<");
        btnPrev.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        btnPrev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrevActionPerformed(evt);
            }
        });
        kGradientPanel4.add(btnPrev);
        btnPrev.setBounds(100, 10, 88, 38);

        btnNext.setText(">>");
        btnNext.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });
        kGradientPanel4.add(btnNext);
        btnNext.setBounds(200, 10, 88, 38);

        btnLast.setText(">|");
        btnLast.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        btnLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLastActionPerformed(evt);
            }
        });
        kGradientPanel4.add(btnLast);
        btnLast.setBounds(300, 10, 83, 38);

        btnFirst.setText("|<");
        btnFirst.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        btnFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirstActionPerformed(evt);
            }
        });
        kGradientPanel4.add(btnFirst);
        btnFirst.setBounds(10, 10, 82, 40);

        kButton2.setText("Export Excel");
        kButton2.setkEndColor(new java.awt.Color(255, 153, 51));
        kButton2.setkStartColor(new java.awt.Color(255, 51, 0));
        kButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kButton2ActionPerformed(evt);
            }
        });
        kGradientPanel4.add(kButton2);
        kButton2.setBounds(390, 10, 83, 38);

        kGradientPanel3.add(kGradientPanel4);
        kGradientPanel4.setBounds(10, 550, 480, 60);

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Loại Sản Phẩm ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Consolas", 1, 12), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel5.setForeground(new java.awt.Color(255, 255, 255));
        jPanel5.setOpaque(false);
        jPanel5.setLayout(null);

        cboLoaiSP.setFont(new java.awt.Font("Consolas", 1, 12)); // NOI18N
        cboLoaiSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboLoaiSPActionPerformed(evt);
            }
        });
        jPanel5.add(cboLoaiSP);
        cboLoaiSP.setBounds(10, 20, 220, 30);

        kGradientPanel3.add(jPanel5);
        jPanel5.setBounds(250, 90, 240, 60);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Nhà cung cấp", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Consolas", 1, 12), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel2.setForeground(new java.awt.Color(255, 255, 255));
        jPanel2.setOpaque(false);
        jPanel2.setLayout(null);

        cboNCC.setFont(new java.awt.Font("Consolas", 1, 12)); // NOI18N
        cboNCC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboNCCActionPerformed(evt);
            }
        });
        jPanel2.add(cboNCC);
        cboNCC.setBounds(10, 20, 205, 30);

        kGradientPanel3.add(jPanel2);
        jPanel2.setBounds(20, 90, 230, 60);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/find.png"))); // NOI18N
        kGradientPanel3.add(jLabel1);
        jLabel1.setBounds(450, 50, 36, 30);

        kGradientPanel1.add(kGradientPanel3);
        kGradientPanel3.setBounds(0, 0, 500, 620);

        kGradientPanel2.setForeground(new java.awt.Color(255, 255, 255));
        kGradientPanel2.setkGradientFocus(100);
        kGradientPanel2.setOpaque(false);
        kGradientPanel2.setLayout(null);

        jLabel3.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Mã sản phẩm:");
        kGradientPanel2.add(jLabel3);
        jLabel3.setBounds(16, 223, 104, 30);

        jLabel4.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Hình:");
        kGradientPanel2.add(jLabel4);
        jLabel4.setBounds(20, 22, 50, 17);

        lbHinh.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        lbHinh.setOpaque(true);
        lbHinh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbHinhMouseClicked(evt);
            }
        });
        kGradientPanel2.add(lbHinh);
        lbHinh.setBounds(74, 22, 280, 190);

        jLabel5.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Tên sản phẩm:");
        kGradientPanel2.add(jLabel5);
        jLabel5.setBounds(10, 271, 110, 30);

        txtMaXanPham.setFont(new java.awt.Font("Consolas", 1, 12)); // NOI18N
        txtMaXanPham.setForeground(new java.awt.Color(255, 255, 255));
        kGradientPanel2.add(txtMaXanPham);
        txtMaXanPham.setBounds(138, 233, 200, 20);

        txtTenSP.setFont(new java.awt.Font("Consolas", 1, 12)); // NOI18N
        txtTenSP.setForeground(new java.awt.Color(255, 255, 255));
        txtTenSP.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtTenSP.setActionCommand("<Not Set>");
        txtTenSP.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 255, 255)));
        txtTenSP.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtTenSP.setOpaque(false);
        kGradientPanel2.add(txtTenSP);
        txtTenSP.setBounds(138, 278, 200, 20);

        jLabel6.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Số lượng:");
        kGradientPanel2.add(jLabel6);
        jLabel6.setBounds(47, 319, 72, 30);

        txtSoLuong.setFont(new java.awt.Font("Consolas", 1, 12)); // NOI18N
        txtSoLuong.setForeground(new java.awt.Color(255, 255, 255));
        txtSoLuong.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 255, 255)));
        txtSoLuong.setOpaque(false);
        kGradientPanel2.add(txtSoLuong);
        txtSoLuong.setBounds(138, 326, 200, 20);

        jLabel7.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Nhà cung cấp:");
        kGradientPanel2.add(jLabel7);
        jLabel7.setBounds(10, 415, 106, 30);

        txtGia.setFont(new java.awt.Font("Consolas", 1, 12)); // NOI18N
        txtGia.setForeground(new java.awt.Color(255, 255, 255));
        txtGia.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 255, 255)));
        txtGia.setOpaque(false);
        txtGia.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtGiaKeyReleased(evt);
            }
        });
        kGradientPanel2.add(txtGia);
        txtGia.setBounds(140, 370, 200, 30);

        jLabel8.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Giá:");
        kGradientPanel2.add(jLabel8);
        jLabel8.setBounds(90, 370, 32, 30);

        jLabel9.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Loại:");
        kGradientPanel2.add(jLabel9);
        jLabel9.setBounds(80, 460, 40, 30);

        kButton1.setText("+");
        kButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kButton1ActionPerformed(evt);
            }
        });
        kGradientPanel2.add(kButton1);
        kButton1.setBounds(290, 460, 50, 30);

        kGradientPanel5.setkEndColor(new java.awt.Color(153, 204, 255));
        kGradientPanel5.setkStartColor(new java.awt.Color(153, 204, 255));
        kGradientPanel5.setOpaque(false);
        kGradientPanel5.setLayout(null);

        btnXoa.setText("Xóa");
        btnXoa.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });
        kGradientPanel5.add(btnXoa);
        btnXoa.setBounds(110, 10, 70, 37);

        btnSua.setText("Sửa");
        btnSua.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });
        kGradientPanel5.add(btnSua);
        btnSua.setBounds(190, 10, 72, 37);

        btnMoi.setText("Mới");
        btnMoi.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        btnMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoiActionPerformed(evt);
            }
        });
        kGradientPanel5.add(btnMoi);
        btnMoi.setBounds(270, 10, 72, 37);

        btnThem.setText("Thêm");
        btnThem.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });
        kGradientPanel5.add(btnThem);
        btnThem.setBounds(20, 10, 75, 37);

        kGradientPanel2.add(kGradientPanel5);
        kGradientPanel5.setBounds(10, 549, 348, 60);

        cboNCC1.setFont(new java.awt.Font("Consolas", 1, 12)); // NOI18N
        kGradientPanel2.add(cboNCC1);
        cboNCC1.setBounds(134, 415, 210, 32);

        cboLoaiSP1.setFont(new java.awt.Font("Consolas", 1, 12)); // NOI18N
        cboLoaiSP1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboLoaiSP1ActionPerformed(evt);
            }
        });
        kGradientPanel2.add(cboLoaiSP1);
        cboLoaiSP1.setBounds(134, 460, 150, 30);

        kGradientPanel1.add(kGradientPanel2);
        kGradientPanel2.setBounds(510, 0, 370, 620);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(kGradientPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 880, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(kGradientPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 620, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tblSanPhamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSanPhamMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2) {
            this.row = tblSanPham.getSelectedRow();
            this.edit();
            this.fillHinhAnh();
        }
    }//GEN-LAST:event_tblSanPhamMouseClicked

    private void lbHinhMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbHinhMouseClicked
        this.chonAnh();
    }//GEN-LAST:event_lbHinhMouseClicked

    private void cboNCCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboNCCActionPerformed
        this.fillComboBoxLOAI();
        this.fillTableSanPham();
    }//GEN-LAST:event_cboNCCActionPerformed

    private void cboLoaiSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboLoaiSPActionPerformed
        this.fillTableComboSanPham();
    }//GEN-LAST:event_cboLoaiSPActionPerformed

    private void txtTimKiemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKiemKeyReleased
        DefaultTableModel model = (DefaultTableModel) tblSanPham.getModel();
        model.setRowCount(0);
        String keyword = txtTimKiem.getText();
        NhaCungCap nhaCungCap = (NhaCungCap) cboNCC.getSelectedItem();
        LoaiSanPham loaiSanPham = (LoaiSanPham) cboLoaiSP.getSelectedItem();
        List<SanPham> list = dao.selectbyName(keyword, nhaCungCap.getMANCC(), loaiSanPham.getMALOAI());
        for (SanPham sp : list) {
            model.addRow(new Object[]{
                sp.getMASP(),
                sp.getTENSP(),
                sp.getSOLUONG(),
                XChuyenDoiTien.DinhDangTien(sp.getGIA()),
                sp.getMANCC(),
                sp.getMALOAI(),
                sp.getHINH()
            }
            );
        }
    }//GEN-LAST:event_txtTimKiemKeyReleased

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        // TODO add your handling code here:
        this.next();
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstActionPerformed
        // TODO add your handling code here:\
        this.first();
    }//GEN-LAST:event_btnFirstActionPerformed

    private void btnPrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrevActionPerformed
        // TODO add your handling code here:
        this.prev();
    }//GEN-LAST:event_btnPrevActionPerformed

    private void btnLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLastActionPerformed
        // TODO add your handling code here:
        this.last();
    }//GEN-LAST:event_btnLastActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        this.delete();
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO add your handling code here:
        this.update();
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoiActionPerformed
        // TODO add your handling code here:
        this.clearForm();
    }//GEN-LAST:event_btnMoiActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        this.insert();
    }//GEN-LAST:event_btnThemActionPerformed

    private void kButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kButton1ActionPerformed
        // TODO add your handling code here:
        new LoaiSanPhamJDiaLog(null, true).setVisible(true);
    }//GEN-LAST:event_kButton1ActionPerformed

    private void txtTimKiemFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTimKiemFocusGained
        // TODO add your handling code here:
        if (txtTimKiem.getText().equals("Tìm kiếm")) {
            txtTimKiem.setText("");
        }
    }//GEN-LAST:event_txtTimKiemFocusGained

    private void txtTimKiemFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTimKiemFocusLost
        // TODO add your handling code here:
        if (txtTimKiem.getText().equals("")) {
            txtTimKiem.setText("Tìm kiếm");
        }
    }//GEN-LAST:event_txtTimKiemFocusLost

    private void cboLoaiSP1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboLoaiSP1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboLoaiSP1ActionPerformed

    private void txtGiaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtGiaKeyReleased
        // TODO add your handling code here:
        double gia = XChuyenDoiTien.ChuyenTien(txtGia.getText());
        String gia1= XChuyenDoiTien.DinhDangTien(gia);
        txtGia.setText(gia1);   
    }//GEN-LAST:event_txtGiaKeyReleased

    private void kButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kButton2ActionPerformed
        // TODO add your handling code here:
           XExcel a = new XExcel();
        a.exportToExcels(tblSanPham);

    }//GEN-LAST:event_kButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private keeptoo.KButton btnFirst;
    private keeptoo.KButton btnLast;
    private keeptoo.KButton btnMoi;
    private keeptoo.KButton btnNext;
    private keeptoo.KButton btnPrev;
    private keeptoo.KButton btnSua;
    private keeptoo.KButton btnThem;
    private keeptoo.KButton btnXoa;
    private javax.swing.JComboBox<String> cboLoaiSP;
    private javax.swing.JComboBox<String> cboLoaiSP1;
    private javax.swing.JComboBox<String> cboNCC;
    private javax.swing.JComboBox<String> cboNCC1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private keeptoo.KButton kButton1;
    private keeptoo.KButton kButton2;
    private keeptoo.KGradientPanel kGradientPanel1;
    private keeptoo.KGradientPanel kGradientPanel2;
    private keeptoo.KGradientPanel kGradientPanel3;
    private keeptoo.KGradientPanel kGradientPanel4;
    private keeptoo.KGradientPanel kGradientPanel5;
    private javax.swing.JLabel lbHinh;
    private javax.swing.JTable tblSanPham;
    private javax.swing.JTextField txtGia;
    private javax.swing.JLabel txtMaXanPham;
    private javax.swing.JTextField txtSoLuong;
    private javax.swing.JTextField txtTenSP;
    private javax.swing.JTextField txtTimKiem;
    // End of variables declaration//GEN-END:variables

    SanPhamDAO dao = new SanPhamDAO();
    NhaCungCapDAO nccdao = new NhaCungCapDAO();
    LoaiSanPhamDAO lspdao = new LoaiSanPhamDAO();
    SanPhamDAO spdao = new SanPhamDAO();
    int row = -1;

    void init() {
        txtTenSP.setBackground(new java.awt.Color(0, 0, 0, 1));
        txtGia.setBackground(new java.awt.Color(0, 0, 0, 1));
        txtMaXanPham.setBackground(new java.awt.Color(0, 0, 0, 1));
        txtSoLuong.setBackground(new java.awt.Color(0, 0, 0, 1));
        txtTimKiem.setBackground(new java.awt.Color(0, 0, 0, 1));
        this.fillComboBoxNCC();
        this.fillComboBoxNCC1();
        this.fillComboBoxLOAI1();
        this.updateStatus();
        this.CanChinhTable();
        JTableHeader header = tblSanPham.getTableHeader();
        header.setBackground(Color.cyan);
        header.setForeground(Color.black);
        header.setFont(new Font("Tahoma", Font.BOLD, 12));
    }

    void fillTableComboSanPham() {
        DefaultTableModel model = (DefaultTableModel) tblSanPham.getModel();
        model.setRowCount(0);
        NhaCungCap nhaCungCap = (NhaCungCap) cboNCC.getSelectedItem();
        LoaiSanPham loaiSanPham = (LoaiSanPham) cboLoaiSP.getSelectedItem();
        if (loaiSanPham != null) {
            List<SanPham> list = spdao.selectByNCC_LOAISP(nhaCungCap.getMANCC(), loaiSanPham.getMALOAI());
            for (int i = 0; i < list.size(); i++) {
                SanPham sp = list.get(i);
                Object[] row = {
                    sp.getMASP(),
                    sp.getTENSP(),
                    sp.getSOLUONG(),
                    XChuyenDoiTien.DinhDangTien(sp.getGIA()),
                    sp.getMANCC(),
                    sp.getMALOAI(),
                    sp.getHINH()
                };
                model.addRow(row);
            }
        }

    }

    void insert() {
        if (!Validate()) {
            return;
        } else {
            SanPham model = getForm();
            try {
                this.Validate();
                dao.insert(model);
                this.fillTableComboSanPham();
                this.clearForm();
                MsgBox.alert(this, "Thêm mới thành công!");
            } catch (Exception e) {
                MsgBox.alert(this, "Thêm mới thất bại!" + e);
            }

        }
    }

    void update() {
        if (!Validate() == true) {
            return;
        } else {
            SanPham model = getForm();
            try {
                dao.update(model);
                this.fillTableComboSanPham();
                MsgBox.alert(this, "Cập nhật thành công!");
            } catch (Exception e) {
                MsgBox.alert(this, "Cập nhật thất bại!");
            }
        }

    }

    void delete() {

        if (MsgBox.confirm(this, "Bạn có muốn xóa hay không?")) {
            //Integer macd = txtMaXanPham.getText();
            Integer masp = (Integer) tblSanPham.getValueAt(this.row, 0);
            try {
                dao.delete(masp);
                this.fillTableComboSanPham();
                this.clearForm();
                MsgBox.alert(this, "Xóa thành công!");
            } catch (Exception e) {
                MsgBox.alert(this, "Xóa thất bại!");
            }
        }
    }

    void clearForm() {
        NhaCungCap nhaCC = (NhaCungCap) cboNCC.getSelectedItem();
        LoaiSanPham loaiSP = (LoaiSanPham) cboLoaiSP.getSelectedItem();
        SanPham sp = new SanPham();
        this.setForm(sp);
        lbHinh.setIcon(null);
        lbHinh.setToolTipText("");
        this.row = -1;
        this.updateStatus();
        fillComboBoxLOAI1();
        fillComboBoxNCC1();
    }

    void edit() {
        //LoaiSanPham lsp = (LoaiSanPham) cboLoaiSP.getSelectedItem();
        Integer masp = (Integer) tblSanPham.getValueAt(this.row, 0);
        SanPham sp = dao.selectById(masp);
        this.setForm(sp);
        this.updateStatus();
        this.fillComboBoxTenLoai();
        this.fillComboBoxTenNCC();
        //txtMaLoai.setText(lsp.getMALOAI());
    }

    void setForm(SanPham cd) {
        txtMaXanPham.setText(String.valueOf(cd.getMASP()));
        txtTenSP.setText(cd.getTENSP());
        txtSoLuong.setText(String.valueOf(cd.getSOLUONG()));
        txtGia.setText(String.valueOf(XChuyenDoiTien.DinhDangTien(cd.getGIA())));
        if (cd.getHINH() != null) {
            lbHinh.setToolTipText(cd.getHINH());
            fillHinhAnh();
        }

    }

    SanPham getForm() {
        NhaCungCap ncc = (NhaCungCap) cboNCC1.getSelectedItem();
        LoaiSanPham lsp = (LoaiSanPham) cboLoaiSP1.getSelectedItem();
        SanPham cd = new SanPham();
        cd.setMASP(Integer.valueOf(txtMaXanPham.getText()));
        cd.setTENSP(txtTenSP.getText());
        cd.setSOLUONG(Integer.valueOf(txtSoLuong.getText()));
        cd.setGIA(XChuyenDoiTien.ChuyenTien(txtGia.getText()));
        cd.setHINH(lbHinh.getToolTipText());
        cd.setMANCC(ncc.getMANCC());
        cd.setMALOAI(lsp.getMALOAI());
        return cd;
    }

    void first() {
        this.row = 0;
        tblSanPham.setRowSelectionInterval(row, row);
        this.edit();
    }

    void prev() {
        if (this.row > 0) {
            this.row--;
            tblSanPham.setRowSelectionInterval(row, row);
            this.edit();
        }
    }

    void next() {
        if (this.row < tblSanPham.getRowCount() - 1) {
            this.row++;
            tblSanPham.setRowSelectionInterval(row, row);
            this.edit();
        }
    }

    void last() {
        this.row = tblSanPham.getRowCount() - 1;
        tblSanPham.setRowSelectionInterval(row, row);
        this.edit();
    }

    void updateStatus() {
        boolean edit = (this.row >= 0);
        boolean first = (this.row == 0);
        boolean last = (this.row == tblSanPham.getRowCount() - 1);
        // Trạng thái form
        btnThem.setVisible(!edit);
        btnSua.setVisible(edit);
        btnXoa.setVisible(edit);

        // Trạng thái điều hướng
        
        btnFirst.setVisible(edit && !first);
        btnPrev.setVisible(edit && !first);
        btnNext.setVisible(edit && !last);
        btnLast.setVisible(edit && !last);
    }

    JFileChooser fileChooser = new JFileChooser("src\\IMAGES_SP");

    void chonAnh() {
        if (fileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            XImage.save(file); // lưu hình vào thư mục logos
            ImageIcon icon = XImage.read(file.getName()); // đọc hình từ logos

            Image im = icon.getImage();// lấy hình
            ImageIcon icon1 = new ImageIcon(im.getScaledInstance(lbHinh.getWidth(), lbHinh.getHeight(), im.SCALE_SMOOTH));
            //lbHinh.setIcon(icon);
            lbHinh.setIcon(icon1);
            lbHinh.setToolTipText(file.getName()); // giữ tên hình trong tooltip
        }
    }

    void fillHinhAnh() {// lấy hình ảnh trong bảng sp và fill đổ lên lblANh
        hinhanh(tblSanPham.getValueAt(row, 6).toString());
    }

    void hinhanh(String hinh) {// lấy hình ảnh
        ImageIcon img = new ImageIcon("src\\IMAGES_SP\\" + hinh);// đường dẫn đến hình
        Image im = img.getImage();// lấy hình
        ImageIcon icon = new ImageIcon(im.getScaledInstance(lbHinh.getWidth(), lbHinh.getHeight(), im.SCALE_SMOOTH));
        // getScaledInstance làm cho hình ảnh nhỏ lại, đúng theo chiều rộng và chiều cao đã được qui định
        // SCALE SMOOTH Chọn thuật toán chia tỷ lệ hình ảnh ưu tiên độ mịn hình ảnh cao hơn tốc độ chia tỷ lệ
        lbHinh.setIcon(icon);
    }

    void fillComboBoxNCC() {
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboNCC.getModel();
        model.removeAllElements();
        List<NhaCungCap> list = nccdao.selectAll();
        for (NhaCungCap ncc : list) {
            model.addElement(ncc);
        }
        this.fillComboBoxLOAI();
    }

    void fillComboBoxLOAI() {
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboLoaiSP.getModel();
        model.removeAllElements();
        NhaCungCap nhaCungCap = (NhaCungCap) cboNCC.getSelectedItem();
        List<LoaiSanPham> list = lspdao.selectByNCC(nhaCungCap.getMANCC());
        for (LoaiSanPham lsp : list) {
            model.addElement(lsp);
        }
        this.fillTableSanPham();
    }

    void fillTableSanPham() {
        DefaultTableModel model = (DefaultTableModel) tblSanPham.getModel();
        model.setRowCount(0);
        NhaCungCap nhaCungCap = (NhaCungCap) cboNCC.getSelectedItem();
        LoaiSanPham loaiSanPham = (LoaiSanPham) cboLoaiSP.getSelectedItem();
        if (loaiSanPham != null) {
            List<SanPham> list = spdao.selectByNCC_LOAISP(nhaCungCap.getMANCC(), loaiSanPham.getMALOAI());
            for (int i = 0; i < list.size(); i++) {
                SanPham sp = list.get(i);
                model.addRow(new Object[]{
                    sp.getMASP(),
                    sp.getTENSP(),
                    sp.getSOLUONG(),
                    XChuyenDoiTien.DinhDangTien(sp.getGIA()),
                    sp.getMANCC(),
                    sp.getMALOAI(),
                    sp.getHINH()});
            }
        }
    }

    boolean Validate() {
        if (txtTenSP.getText().equals("")) {
            MsgBox.alert(this, "Tên Sản Phẩm Không Được Để Trống !");
            return false;
        }
        if (txtSoLuong.getText().equals("")) {
            MsgBox.alert(this, "Số Lượng Không Được Để Trống !");
            return false;
        }
        if (txtGia.getText().equals("")) {
            MsgBox.alert(this, "Gía Không Được Để Trống !");
            return false;

        }
        return true;
    }

    void fillComboBoxNCC1() {
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboNCC1.getModel();
        model.removeAllElements();
        List<NhaCungCap> list = nccdao.selectAll();
        for (NhaCungCap ncc : list) {
            model.addElement(ncc);
        }
    }

    void fillComboBoxLOAI1() {
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboLoaiSP1.getModel();
        model.removeAllElements();
        NhaCungCap nhaCungCap = (NhaCungCap) cboLoaiSP1.getSelectedItem();
        List<LoaiSanPham> list = lspdao.selectAll();
        for (LoaiSanPham lsp : list) {
            model.addElement(lsp);
        }
    }

    void fillComboBoxTenLoai() {
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboLoaiSP1.getModel();
        model.removeAllElements();
        try {
            String keyword = String.valueOf(cboLoaiSP.getSelectedItem());
            List<LoaiSanPham> list = lspdao.selectByNameLSP(keyword);// ĐỔ dữ liệu theo tên đc nhập 
            for (LoaiSanPham lsp1 : list) {
                Object[] row = {
                    lsp1.getMALOAI(),
                    lsp1.getTENLOAI(),};
                model.addElement(lsp1);
            }
        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu!");
        }
    }

    void fillComboBoxTenNCC() {
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboNCC1.getModel();
        model.removeAllElements();
        try {
            String keyword = String.valueOf(cboNCC.getSelectedItem());
            List<NhaCungCap> list = nccdao.selectByTenNCC(keyword);// ĐỔ dữ liệu theo tên đc nhập 
            for (NhaCungCap ncc1 : list) {
                Object[] row = {
                    ncc1.getMANCC(),
                    ncc1.getTENNCC(),};
                model.addElement(ncc1);
            }
        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu!");
        }
    }
    void CanChinhTable() {
        tblSanPham.setAutoResizeMode(tblSanPham.AUTO_RESIZE_OFF);
        tblSanPham.getColumnModel().getColumn(0).setPreferredWidth(50);
        tblSanPham.getColumnModel().getColumn(1).setPreferredWidth(140);
        tblSanPham.getColumnModel().getColumn(2).setPreferredWidth(35);
        tblSanPham.getColumnModel().getColumn(3).setPreferredWidth(60);
        tblSanPham.getColumnModel().getColumn(4).setPreferredWidth(50);
        tblSanPham.getColumnModel().getColumn(5).setPreferredWidth(50);
        tblSanPham.getColumnModel().getColumn(6).setPreferredWidth(80);
     
    }
}
